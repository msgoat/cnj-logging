<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>group.msg.at.cloud</groupId>
    <artifactId>cnj-logging-resources</artifactId>
    <version>${revision}${changelist}${sha1}</version>
    <packaging>pom</packaging>
    <description>All attached resources required for the Cloud Native Persistence Showcases</description>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- pinning versions of common maven plugins -->
        <maven.clean.plugin.version>3.1.0</maven.clean.plugin.version>
        <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
        <maven.dependency.plugin.version>3.1.1</maven.dependency.plugin.version>
        <maven.deploy.plugin.version>2.8.2</maven.deploy.plugin.version>
        <maven.enforcer.plugin.version>3.0.0-M3</maven.enforcer.plugin.version>
        <maven.failsafe.plugin.version>2.22.1</maven.failsafe.plugin.version>
        <maven.flatten.plugin.version>1.2.1</maven.flatten.plugin.version>
        <maven.install.plugin.version>2.5.2</maven.install.plugin.version>
        <maven.jar.plugin.version>3.2.0</maven.jar.plugin.version>
        <maven.resources.plugin.version>3.1.0</maven.resources.plugin.version>
        <maven.site.plugin.version>3.8.2</maven.site.plugin.version>
        <maven.source.plugin.version>3.2.1</maven.source.plugin.version>
        <maven.surefire.plugin.version>2.22.1</maven.surefire.plugin.version>
        <!-- pinning versions of application type specific maven plugins -->
        <maven.war.plugin.version>3.2.3</maven.war.plugin.version>
        <!-- pinning versions of cloud native specific maven plugins -->
        <maven.compose.plugin.version>1.0.0</maven.compose.plugin.version>
        <maven.docker.plugin.version>0.33.0</maven.docker.plugin.version>
        <maven.helm.plugin.version>2.1.0</maven.helm.plugin.version>
        <!-- new Maven version management -->
        <revision>4.1.0</revision>
        <sha1></sha1>
        <changelist></changelist>
    </properties>
    <build>
        <pluginManagement>
            <plugins>
                <!-- common maven plugins section -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven.clean.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <parameters>true</parameters>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.dependency.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven.deploy.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven.enforcer.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven.failsafe.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven.install.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven.site.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>${maven.flatten.plugin.version}</version>
                </plugin>
                <!-- application type specific maven plugins section -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven.war.plugin.version}</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
                <!-- cloud native specific maven plugins section -->
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${maven.docker.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>group.msg.at.cloud.tools</groupId>
                    <artifactId>compose-maven-plugin</artifactId>
                    <version>${maven.compose.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>group.msg.at.cloud.tools</groupId>
                    <artifactId>helm-maven-plugin</artifactId>
                    <version>${maven.helm.plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[3.5,)</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <!-- profile pre-commit-stage representing pre-commit-stage of local build -->
        <profile>
            <id>pre-commit-stage</id>
        </profile>
        <!-- profile commit-stage representing commit-stage of CI build -->
        <profile>
            <id>commit-stage</id>
        </profile>
        <!-- profile integration-test-stage representing integration-test-stage of CI build -->
        <profile>
            <id>integration-test-stage</id>
                <properties>
                    <k8s.cluster.namespace>cloudtrain-int</k8s.cluster.namespace>
                    <postgres.admin.password>${env.POSTGRES_ADMIN_PASSWORD}</postgres.admin.password>
                    <postgres.user.password>${env.POSTGRES_USER_PASSWORD}</postgres.user.password>
                    <postgres.user.name>${env.POSTGRES_USER_NAME}</postgres.user.name>
                </properties>
            <build>
                <plugins>
                    <!-- copy resources for helm deployment applying filtering -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-helm-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>${project.basedir}/src/main/helm/${project.artifactId}</directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                    <outputDirectory>${project.build.directory}/helm-resources/${project.artifactId}</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- install/upgrade helm release before running tests; delete helm release after running tests -->
                    <plugin>
                        <groupId>group.msg.at.cloud.tools</groupId>
                        <artifactId>helm-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>helm-dependency-update</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>dependency-update</goal>
                                </goals>
                                <configuration>
                                    <chartDirectory>${project.build.directory}/helm-resources/${project.artifactId}</chartDirectory>
                                    <debug>true</debug>
                                </configuration>
                            </execution>
                            <execution>
                                <id>helm-install-resources</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                                <configuration>
                                    <chartDirectory>${project.build.directory}/helm-resources/${project.artifactId}</chartDirectory>
                                    <releaseName>${project.artifactId}</releaseName>
                                    <namespace>${k8s.cluster.namespace}</namespace>
                                    <debug>true</debug>
                                    <timeout>90s</timeout>
                                    <values>
                                        <postgresql.postgresqlPostgresPassword>${postgres.admin.password}</postgresql.postgresqlPostgresPassword>
                                        <postgresql.postgresqlPassword>${postgres.user.password}</postgresql.postgresqlPassword>
                                        <postgresql.postgresqlUsername>${postgres.user.name}</postgresql.postgresqlUsername>
                                    </values>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <distributionManagement>
        <repository>
            <id>at41-maven-repository</id>
            <name>msg Automotive AT Maven Releases Repository</name>
            <url>https://nexus.at41tools.k8s.aws.msgoat.eu/repository/maven-releases/</url>
        </repository>
    </distributionManagement>
</project>